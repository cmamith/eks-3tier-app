# =========================
# PostgreSQL + Secret + PVC
# =========================
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: sonarqube
type: Opaque
stringData:
  POSTGRES_USER: sonar
  POSTGRES_PASSWORD: sonarpass
  POSTGRES_DB: sonarqube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: sonarqube
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube-postgresql
  namespace: sonarqube
spec:
  selector:
    matchLabels:
      app: sonarqube-postgresql
  template:
    metadata:
      labels:
        app: sonarqube-postgresql
    spec:
      containers:
        - name: postgresql
          image: postgres:13
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secret
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-postgresql
  namespace: sonarqube
spec:
  ports:
    - port: 5432
  selector:
    app: sonarqube-postgresql

# =========================
# SonarQube + PVCs + Service
# =========================
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-data-pvc
  namespace: sonarqube
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-extensions-pvc
  namespace: sonarqube
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-logs-pvc
  namespace: sonarqube
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
        - name: sonarqube
          image: sonarqube:lts
          ports:
            - containerPort: 9000
          env:
            - name: SONARQUBE_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sonarqube-postgres-secret
                  key: postgres-user
            - name: SONARQUBE_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sonarqube-postgres-secret
                  key: postgres-password
            - name: SONAR_JDBC_URL
              value: "jdbc:postgresql://sonarqube-postgresql:5432/sonarqube"
            - name: SONAR_JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: SONAR_JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
          volumeMounts:
            - name: sonar-data
              mountPath: /opt/sonarqube/data
            - name: sonar-extensions
              mountPath: /opt/sonarqube/extensions
            - name: sonar-logs
              mountPath: /opt/sonarqube/logs
      volumes:
        - name: sonar-data
          persistentVolumeClaim:
            claimName: sonar-data-pvc
        - name: sonar-extensions
          persistentVolumeClaim:
            claimName: sonar-extensions-pvc
        - name: sonar-logs
          persistentVolumeClaim:
            claimName: sonar-logs-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube
  namespace: sonarqube
spec:
  type: NodePort
  ports:
    - port: 9000
      targetPort: 9000
      nodePort: 32000
  selector:
    app: sonarqube
